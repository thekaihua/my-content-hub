---
import type { BlogPost } from '../../types/blog';
import BaseLayout from '../../layouts/BaseLayout.astro';
import ContactCTA from '../../components/ContactCTA.astro';

export async function getStaticPaths() {
  // This will be replaced by CMS-specific data fetching in each branch
  // For now, return placeholder data to test the UI
  const posts: BlogPost[] = [
    {
      slug: 'sample-post-1',
      title: 'Sample Blog Post One',
      excerpt: 'This is a sample blog post excerpt to show how the blog listing will look with real content.',
      content: '<p>This is the full content of the first sample blog post. In a real implementation, this would come from your CMS.</p><p>The content supports <strong>HTML formatting</strong> and can include images, links, and other rich content.</p>',
      publishedAt: '2024-01-15T10:00:00.000Z',
      featuredImage: '/assets/backgrounds/bg-main-light.svg',
      featuredImageAlt: 'Sample featured image',
      tags: ['development', 'astro', 'blog'],
      author: {
        name: 'Kai Hua'
      }
    },
    {
      slug: 'sample-post-2',
      title: 'Another Sample Post',
      excerpt: 'Another sample post to demonstrate the blog grid layout and how multiple posts will appear.',
      content: '<p>This is the content for the second sample post.</p><p>Each CMS branch will replace this getStaticPaths function with their own data fetching logic.</p>',
      publishedAt: '2024-01-10T10:00:00.000Z',
      tags: ['design', 'ui'],
      author: {
        name: 'Kai Hua'
      }
    }
  ];

  return posts.map((post) => {
    return {
      params: { slug: post.slug },
      props: { post },
    };
  });
}

const { post } = Astro.props;

// Format date for display
const publishDate = new Date(post.publishedAt).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<BaseLayout
  title={`${post.title} | Kai Hua`}
  description={post.excerpt}
>
  <div class="stack gap-20">
    <div class="stack gap-15">
      <header>
        <div class="wrapper stack gap-2">
          <a class="back-link" href="/blog">‚Üê Back to Blog</a>
          <h1 class="hero-title">{post.title}</h1>
          <div class="details">
            <div class="meta">
              <time datetime={post.publishedAt}>{publishDate}</time>
              {post.author && <span>by {post.author.name}</span>}
            </div>
            {post.tags && post.tags.length > 0 && (
              <div class="tags">
                {post.tags.map(tag => (
                  <span class="tag">#{tag}</span>
                ))}
              </div>
            )}
          </div>
        </div>
      </header>

      {post.featuredImage && (
        <div class="img">
          <img
            src={post.featuredImage}
            alt={post.featuredImageAlt || post.title}
          />
        </div>
      )}

      <div class="wrapper">
        <div class="stack gap-10 text-center">
          <article class="content">
            <Fragment set:html={post.content} />
          </article>
        </div>
      </div>
    </div>
    <ContactCTA />
  </div>
</BaseLayout>

<style>
  header {
    padding-bottom: 2.5rem;
    border-bottom: 1px solid var(--gray-800);
  }

  .back-link {
    display: none;
  }

  .details {
    display: flex;
    flex-direction: column;
    padding: 0.5rem;
    gap: 1.5rem;
    justify-content: space-between;
    align-items: center;
  }

  .meta {
    display: flex;
    gap: 0.5rem;
    color: var(--gray-300);
    font-size: var(--text-sm);
  }

  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .tag {
    color: var(--accent-regular);
    font-size: var(--text-sm);
  }

  .content {
    max-width: 65ch;
    margin-inline: auto;
  }

  .content > :global(* + *) {
    margin-top: 1rem;
  }

  .content :global(h1),
  .content :global(h2),
  .content :global(h3),
  .content :global(h4),
  .content :global(h5) {
    margin: 1.5rem 0 0.5rem;
    color: var(--gray-0);
  }

  .content :global(img) {
    border-radius: 1.5rem;
    box-shadow: var(--shadow-sm);
    background: var(--gradient-subtle);
    border: 1px solid var(--gray-800);
    max-width: 100%;
    height: auto;
  }

  .back-link {
    color: var(--accent-regular);
    text-decoration: none;
    font-size: var(--text-sm);
  }

  .back-link:hover {
    text-decoration: underline;
  }

  @media (min-width: 50em) {
    .back-link {
      display: block;
      align-self: flex-start;
    }

    .details {
      flex-direction: row;
    }
  }
</style>