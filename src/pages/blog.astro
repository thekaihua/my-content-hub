---
import type { BlogPostPreview } from '../types/blog';
import ContactCTA from '../components/ContactCTA.astro';
import Grid from '../components/Grid.astro';
import Hero from '../components/Hero.astro';
import BlogPreview from '../components/BlogPreview.astro';
import BaseLayout from '../layouts/BaseLayout.astro';
import { useStoryblokApi } from '@storyblok/astro'

// Fetch all blog posts from Storyblok
const storyblokApi = useStoryblokApi();

const { data } = await storyblokApi.get('cdn/stories', {
  version: import.meta.env.DEV ? "draft" : "published",
  content_type: 'blogPost',
})

// Transform Storyblok data to match BlogPostPreview interface
const posts: BlogPostPreview[] = data.stories.map(story => {
  return {
    slug: story.full_slug,
    title: story.content.title,
    excerpt: story.content.description,
    publishedAt: story.published_at,
    tags: [], // Add tags if available in Storyblok
    author: {
      name: 'Kai Hua'
    }
  }
});

// Posts are already sorted by Storyblok (newest first)
const sortedPosts = posts;
---

<BaseLayout
  title="Blog | Kai Hua"
  description="Read my latest thoughts on development, design, and technology"
>
  <div class="stack gap-20">
    <main class="wrapper stack gap-8">
      <Hero
        title="Blog"
        tagline="Thoughts, insights, and updates on development and design."
        align="start"
      />
      <Grid variant="offset">
        {
          sortedPosts.map((post) => (
            <li>
              <BlogPreview post={post} />
            </li>
          ))
        }
      </Grid>
    </main>
    <ContactCTA />
  </div>
</BaseLayout>